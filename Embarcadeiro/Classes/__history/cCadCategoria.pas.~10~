unit cCadCategoria;

interface

uses System.Classes,
     Vcl.Controls,
     Vcl.ExtCtrls,
     Vcl.Dialogs,
     FireDAC.Stan.Intf,
     FireDAC.Stan.Option,
     FireDAC.Stan.Error,
     FireDAC.UI.Intf,
     FireDAC.Phys.Intf,
     FireDAC.Stan.Def,
     FireDAC.Stan.Pool,
     FireDAC.Stan.Async,
     FireDAC.Phys,
     FireDAC.Phys.FB,
     FireDAC.Phys.FBDef,
     FireDAC.VCLUI.Wait,
     FireDAC.Comp.UI,
     FireDAC.Phys.IBBase,
     Data.DB,
     FireDAC.Comp.Client,
     System.SysUtils;

type
  TCategoria = class

  private
  ConexaoDB:TFDConnection;
  F_Codigo:Integer;
  F_Descricao:String;
    function getCodigo: Integer;
    function getDescricao: String;
    procedure SetCodigo(const Value: Integer);
    procedure SetDescricao(const Value: String);

  public
  constructor Create(aConexao:TFDConnection);
  destructor Destroy; override;
  function Incluir:Boolean;
  function Alterar:Boolean;
  function Excluir:Boolean;
  function Selecionar(id:Integer):Boolean;
  published
    property Codigo:Integer   read getCodigo write SetCodigo;
    property Descricao:String read getDescricao write SetDescricao;


  end;


implementation

{ TCategoria }

{$region 'Constructor e Destructor'}

constructor TCategoria.Create(aConexao:TFDConnection);
begin
  ConexaoDB:=aConexao;
end;

destructor TCategoria.Destroy;
begin

  inherited;
end;

{$endregion}

{$region 'CRUD'}
function TCategoria.Excluir: Boolean;
begin
ShowMessage('Excluído.');
Result:=true;
end;

function TCategoria.Alterar: Boolean;
begin
ShowMessage('Alterado.');
Result:=true;
end;

function TCategoria.Incluir: Boolean;
var QryGravar:TFDQuery;

begin
  try
    Result:=True;
    QryGravar:=TFDQuery.Create(nil);
    QryGravar.Connection:=ConexaoDB;
    QryGravar.SQl.Clear;
    QryGravar.SQL.Add('INSERT INTO PA_ITEN_TESTE (DESCRICAO) VALUES (:DESCRICAO);');
    QryGravar.ParamByName('DESCRICAO').Value:=Self.F_Descricao;
    Try
    QryGravar.ExecSQL;
    Except
    Result:=False;
    End;
  finally
    if Assigned(QryGravar) then
    FreeAndNil(QryGravar);
  end;
end;

function TCategoria.Selecionar(id: Integer): Boolean;
begin

end;
{$endregion 'CRUD'}

{$region 'Gets'}
function TCategoria.getCodigo: Integer;
begin
  Result := Self.F_Codigo;
end;

function TCategoria.getDescricao: String;
begin
  Result := Self.F_Descricao;
end;
{$endregion 'Gets'}

{$region 'Sets'}
procedure TCategoria.SetCodigo(const Value: Integer);
begin
  Self.F_Codigo := Value;
end;

procedure TCategoria.SetDescricao(const Value: String);
begin
  Self.F_Descricao:= Value;
end;
{$endregion 'Sets'}

end.
